// <auto-generated />
using DAL.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace DAL.Migrations
{
    [DbContext(typeof(ApiContext))]
    [Migration("20180126214500_UpdateUserInfo-Mandal-UserType")]
    partial class UpdateUserInfoMandalUserType
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAL.Core.Models.Mandal", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Area");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("Notes");

                    b.Property<string>("State");

                    b.Property<bool>("Status");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Mandal");
                });

            modelBuilder.Entity("DAL.Core.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<long?>("FacebookId");

                    b.Property<string>("FirstName");

                    b.Property<bool>("IsAdmin");

                    b.Property<string>("LastName");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("NormalizedUserName");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("PictureUrl");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("DAL.Core.Models.UserInfo", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddedBy");

                    b.Property<string>("BirthDay");

                    b.Property<string>("BirthMonth");

                    b.Property<string>("BirthYear");

                    b.Property<string>("Comments");

                    b.Property<string>("Created");

                    b.Property<string>("Designation");

                    b.Property<string>("Gender");

                    b.Property<string>("HomePhone");

                    b.Property<string>("MandalId");

                    b.Property<string>("MidName");

                    b.Property<string>("UserTypeId");

                    b.HasKey("Id");

                    b.HasIndex("AddedBy");

                    b.HasIndex("MandalId");

                    b.ToTable("UserInfo");
                });

            modelBuilder.Entity("DAL.Core.Models.UserType", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Notes");

                    b.Property<bool>("Status");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("UserType");
                });

            modelBuilder.Entity("DAL.Core.Models.UserInfo", b =>
                {
                    b.HasOne("DAL.Core.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("AddedBy");

                    b.HasOne("DAL.Core.Models.Mandal", "Mandal")
                        .WithMany()
                        .HasForeignKey("MandalId");
                });
#pragma warning restore 612, 618
        }
    }
}
